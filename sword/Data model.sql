/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 12.1 		*/
/*  Created On : 12-nov.-2015 14:22:28 				*/
/*  DBMS       : MySql 						*/
/* ---------------------------------------------------- */


/* Drop Tables */

DROP TABLE IF EXISTS `email_queue` CASCADE
;

DROP TABLE IF EXISTS `email_template` CASCADE
;

DROP TABLE IF EXISTS `notification_email` CASCADE
;

DROP TABLE IF EXISTS `authassignment` CASCADE
;

DROP TABLE IF EXISTS `authitemchild` CASCADE
;

DROP TABLE IF EXISTS `authitem` CASCADE
;

DROP TABLE IF EXISTS `financial_expense` CASCADE
;

DROP TABLE IF EXISTS `financial_income` CASCADE
;

DROP TABLE IF EXISTS `financial_report` CASCADE
;

DROP TABLE IF EXISTS `financial_move` CASCADE
;

DROP TABLE IF EXISTS `configuration` CASCADE
;

DROP TABLE IF EXISTS `savings` CASCADE
;

DROP TABLE IF EXISTS `system_variable` CASCADE
;

DROP TABLE IF EXISTS `Task` CASCADE
;

DROP TABLE IF EXISTS `financial_type` CASCADE
;

DROP TABLE IF EXISTS `recordatory_task_time` CASCADE
;

DROP TABLE IF EXISTS `user` CASCADE
;

/* Create Tables */

CREATE TABLE `email_queue`
(
	`eq_id` INT NOT NULL AUTO_INCREMENT,
	`eq_et_id` INT NOT NULL,
	`eq_creation_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	`eq_priority` TINYINT NOT NULL,
	`eq_subject` VARCHAR(100) NOT NULL,
	`eq_recipient_email` VARCHAR(100) NOT NULL,
	`eq_recipient_name` VARCHAR(100) 	,
	`eq_sender_name` VARCHAR(100) 	,
	`eq_dynamic_data_json` BLOB 	,
	`eq_sent` TINYINT 	,
	CONSTRAINT `PK_email_queue` PRIMARY KEY (`eq_id` ASC)
)

;

CREATE TABLE `email_template`
(
	`et_id` INT NOT NULL AUTO_INCREMENT,
	`et_creation_date` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	`et_code` VARCHAR(30) NOT NULL,
	`et_name` VARCHAR(100) NOT NULL,
	`et_url` VARCHAR(255) NOT NULL,
	CONSTRAINT `PK_email_template` PRIMARY KEY (`et_id` ASC)
)

;

CREATE TABLE `notification_email`
(
	`ne_id` INT NOT NULL AUTO_INCREMENT,
	`ne_code` VARCHAR(20) NOT NULL,
	`ne_user_id` BIGINT NOT NULL,
	CONSTRAINT `PK_notification_email` PRIMARY KEY (`ne_id` ASC)
)

;

CREATE TABLE `authassignment`
(
	`itemname` VARCHAR(64) NOT NULL,
	`userid` VARCHAR(64) NOT NULL,
	`bizrule` TEXT 	,
	`data` TEXT 	,
	CONSTRAINT `PK_authassignment` PRIMARY KEY (`itemname` ASC, `userid` ASC)
)

;

CREATE TABLE `authitemchild`
(
	`parent` VARCHAR(64) NOT NULL,
	`child` VARCHAR(64) NOT NULL,
	CONSTRAINT `PK_authitemchild` PRIMARY KEY (`parent` ASC, `child` ASC)
)

;

CREATE TABLE `authitem`
(
	`name` VARCHAR(64) NOT NULL,
	`type` INT NOT NULL,
	`description` TEXT 	,
	`bizrule` TEXT 	,
	`data` TEXT 	,
	CONSTRAINT `PK_authitem` PRIMARY KEY (`name` ASC)
)

;

CREATE TABLE `financial_expense`
(
	`fe_id` BIGINT NOT NULL AUTO_INCREMENT,
	`fe_user_id` BIGINT NOT NULL,
	`fe_ft_id` BIGINT NOT NULL,
	`fe_value` DOUBLE NOT NULL,
	`fe_date` DATE NOT NULL,
	`fe_note` VARCHAR(100) 	,
	`fe_uneditable` TINYINT NOT NULL DEFAULT 0,
	CONSTRAINT `PK_expenses` PRIMARY KEY (`fe_id` ASC)
)

;

CREATE TABLE `financial_income`
(
	`fi_id` BIGINT NOT NULL AUTO_INCREMENT,
	`fi_user_id` BIGINT NOT NULL,
	`fi_ft_id` BIGINT NOT NULL,
	`fi_value` DOUBLE NOT NULL,
	`fi_date` DATE NOT NULL,
	`fi_note` VARCHAR(100) 	,
	`fi_uneditable` TINYINT NOT NULL DEFAULT 0,
	CONSTRAINT `PK_income` PRIMARY KEY (`fi_id` ASC)
)

;

CREATE TABLE `financial_report`
(
	`fr_id` BIGINT NOT NULL AUTO_INCREMENT,
	`fr_user_id` BIGINT NOT NULL,
	`fr_incomes` DOUBLE NOT NULL,
	`fr_expenses` DOUBLE NOT NULL,
	`fr_available` DOUBLE NOT NULL,
	`fr_date` TIMESTAMP NOT NULL DEFAULT NOW(),
	`fr_fm_id` BIGINT 	,
	CONSTRAINT `PK_report` PRIMARY KEY (`fr_id` ASC)
)

;

CREATE TABLE `financial_move`
(
	`fm_id` BIGINT NOT NULL AUTO_INCREMENT,
	`fm_description` VARCHAR(50) NOT NULL,
	CONSTRAINT `PK_financial_move` PRIMARY KEY (`fm_id` ASC)
)

;

CREATE TABLE `configuration`
(
	`con_id` BIGINT NOT NULL AUTO_INCREMENT,
	`con_user_id` BIGINT NOT NULL,
	`con_closig_day_mounth` INT NOT NULL DEFAULT 1,
	CONSTRAINT `PK_configuration` PRIMARY KEY (`con_id` ASC)
)

;

CREATE TABLE `savings`
(
	`sav_id` BIGINT NOT NULL AUTO_INCREMENT,
	`sav_value` DOUBLE NOT NULL,
	`sav_date` DATE 	,
	`sav_note` VARCHAR(100) 	,
	`sav_is_retired` BOOL 	,
	`sav_user_id` BIGINT NOT NULL,
	CONSTRAINT `PK_savings` PRIMARY KEY (`sav_id` ASC)
)

;

CREATE TABLE `system_variable`
(
	`sv_id` BIGINT NOT NULL AUTO_INCREMENT,
	`sv_name` VARCHAR(50) NOT NULL,
	`sv_value_numeric` DECIMAL(19,4) 	,
	`sv_value_text` VARCHAR(50) 	,
	`sv_last_modification_date` DATETIME NOT NULL,
	`sv_last_mod_user_id` BIGINT NOT NULL,
	CONSTRAINT `PK_financial_variables` PRIMARY KEY (`sv_id` ASC)
)

;

CREATE TABLE `Task`
(
	`task_id` BIGINT NOT NULL,
	`task_user_id` BIGINT NOT NULL,
	`task_created_date` TIMESTAMP NOT NULL DEFAULT NOW(),
	`task_description` VARCHAR(250) NOT NULL,
	`task_scheduled` DATE 	,
	`task_done` DATE NOT NULL DEFAULT 0,
	`task_rtt_id` BIGINT 	,
	`task_is_big_task` TINYINT NOT NULL DEFAULT 0,
	`task_task_id` BIGINT 	,
	CONSTRAINT `PK_Task` PRIMARY KEY (`task_id` ASC)
)

;

CREATE TABLE `financial_type`
(
	`ft_id` BIGINT NOT NULL AUTO_INCREMENT,
	`ft_user_id` BIGINT NOT NULL,
	`ft_name` VARCHAR(25) NOT NULL,
	`ft_is_incomes` BOOL NOT NULL,
	CONSTRAINT `PK_financial_type` PRIMARY KEY (`ft_id` ASC)
)

;

CREATE TABLE `recordatory_task_time`
(
	`rtt_id` BIGINT NOT NULL AUTO_INCREMENT,
	`rtt_name` VARCHAR(100) NOT NULL,
	`rtt_time` INT NOT NULL,
	CONSTRAINT `PK_recordatory_task_time` PRIMARY KEY (`rtt_id` ASC)
)

;

CREATE TABLE `user`
(
	`user_id` BIGINT NOT NULL AUTO_INCREMENT,
	`user_email` VARCHAR(50) NOT NULL,
	`user_name` NVARCHAR(20) NOT NULL,
	`user_password` VARCHAR(20) NOT NULL,
	`user_active` TINYINT NOT NULL,
	`user_failed_login_attempts` INT NOT NULL DEFAULT 0,
	`user_security_code` VARCHAR(40) 	,
	`user_register_date` TIMESTAMP 	 DEFAULT NOW(),
	CONSTRAINT `PK_user` PRIMARY KEY (`user_id` ASC)
)

;

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE `email_queue` 
 ADD INDEX `IXFK_email_queue_email_template` (`eq_et_id` ASC)
;

ALTER TABLE `email_template` 
 ADD CONSTRAINT `et_code` UNIQUE (`et_code` ASC)
;

ALTER TABLE `notification_email` 
 ADD CONSTRAINT `UNIQUE_ne_code` UNIQUE (`ne_code` ASC)
;

ALTER TABLE `notification_email` 
 ADD INDEX `IXFK_notification_email_user` (`ne_user_id` ASC)
;

ALTER TABLE `authitemchild` 
 ADD INDEX `child` (`child` ASC)
;

ALTER TABLE `financial_expense` 
 ADD INDEX `IXFK_expenses_financial_type` (`fe_ft_id` ASC)
;

ALTER TABLE `financial_expense` 
 ADD INDEX `IXFK_expenses_user` (`fe_user_id` ASC)
;

ALTER TABLE `financial_income` 
 ADD INDEX `IXFK_income_user` (`fi_user_id` ASC)
;

ALTER TABLE `financial_income` 
 ADD INDEX `IXFK_incomes_financial_type` (`fi_ft_id` ASC)
;

ALTER TABLE `financial_report` 
 ADD INDEX `IXFK_financial_report_financial_move` (`fr_fm_id` ASC)
;

ALTER TABLE `financial_report` 
 ADD INDEX `IXFK_report_user` (`fr_user_id` ASC)
;

ALTER TABLE `configuration` 
 ADD CONSTRAINT `UQ_configuration_con_user_id` UNIQUE (`con_user_id` ASC)
;

ALTER TABLE `configuration` 
 ADD INDEX `IXFK_configuration_user` (`con_user_id` ASC)
;

ALTER TABLE `savings` 
 ADD INDEX `IXFK_savings_user` (`sav_user_id` ASC)
;

ALTER TABLE `system_variable` 
 ADD INDEX `IXFK_system_variable_user` (`sv_last_mod_user_id` ASC)
;

ALTER TABLE `Task` 
 ADD INDEX `IXFK_Task_recordatory_task_time` (`task_rtt_id` ASC)
;

ALTER TABLE `Task` 
 ADD INDEX `IXFK_Task_Task` (`task_task_id` ASC)
;

ALTER TABLE `Task` 
 ADD INDEX `IXFK_Task_user` (`task_user_id` ASC)
;

ALTER TABLE `financial_type` 
 ADD INDEX `IXFK_financial_type_user` (`ft_user_id` ASC)
;

ALTER TABLE `financial_type` 
 ADD INDEX `IXFK_type_user` (`ft_user_id` ASC)
;

ALTER TABLE `user` 
 ADD CONSTRAINT `unique_user_email` UNIQUE (`user_email` ASC)
;

/* Create Foreign Key Constraints */

ALTER TABLE `email_queue` 
 ADD CONSTRAINT `FK_email_queue_email_template`
	FOREIGN KEY (`eq_et_id`) REFERENCES `email_template` (`et_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `notification_email` 
 ADD CONSTRAINT `FK_notification_email_user`
	FOREIGN KEY (`ne_user_id`) REFERENCES `user` (`user_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `authassignment` 
 ADD CONSTRAINT `AuthAssignment_ibfk_1`
	FOREIGN KEY (`itemname`) REFERENCES `authitem` (`name`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `authitemchild` 
 ADD CONSTRAINT `AuthItemChild_ibfk_1`
	FOREIGN KEY (`parent`) REFERENCES `authitem` (`name`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `authitemchild` 
 ADD CONSTRAINT `AuthItemChild_ibfk_2`
	FOREIGN KEY (`child`) REFERENCES `authitem` (`name`) ON DELETE Cascade ON UPDATE Cascade
;

ALTER TABLE `financial_expense` 
 ADD CONSTRAINT `FK_expenses_user`
	FOREIGN KEY (`fe_user_id`) REFERENCES `user` (`user_id`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `financial_expense` 
 ADD CONSTRAINT `FK_expenses_financial_type`
	FOREIGN KEY (`fe_ft_id`) REFERENCES `financial_type` (`ft_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `financial_income` 
 ADD CONSTRAINT `FK_income_user`
	FOREIGN KEY (`fi_user_id`) REFERENCES `user` (`user_id`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `financial_income` 
 ADD CONSTRAINT `FK_incomes_financial_type`
	FOREIGN KEY (`fi_ft_id`) REFERENCES `financial_type` (`ft_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `financial_report` 
 ADD CONSTRAINT `FK_report_user`
	FOREIGN KEY (`fr_user_id`) REFERENCES `user` (`user_id`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `financial_report` 
 ADD CONSTRAINT `FK_financial_report_financial_move`
	FOREIGN KEY (`fr_fm_id`) REFERENCES `financial_move` (`fm_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `configuration` 
 ADD CONSTRAINT `FK_configuration_user`
	FOREIGN KEY (`con_user_id`) REFERENCES `user` (`user_id`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `savings` 
 ADD CONSTRAINT `FK_savings_user`
	FOREIGN KEY (`sav_user_id`) REFERENCES `user` (`user_id`) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE `system_variable` 
 ADD CONSTRAINT `FK_system_variable_user`
	FOREIGN KEY (`sv_last_mod_user_id`) REFERENCES `user` (`user_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `Task` 
 ADD CONSTRAINT `FK_Task_user`
	FOREIGN KEY (`task_user_id`) REFERENCES `user` (`user_id`) ON DELETE Cascade ON UPDATE Restrict
;

ALTER TABLE `Task` 
 ADD CONSTRAINT `FK_Task_recordatory_task_time`
	FOREIGN KEY (`task_rtt_id`) REFERENCES `recordatory_task_time` (`rtt_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `Task` 
 ADD CONSTRAINT `FK_Task_Task`
	FOREIGN KEY (`task_task_id`) REFERENCES `Task` (`task_id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `financial_type` 
 ADD CONSTRAINT `FK_financial_type_user`
	FOREIGN KEY (`ft_user_id`) REFERENCES `user` (`user_id`) ON DELETE Restrict ON UPDATE Restrict
;

SET FOREIGN_KEY_CHECKS=1 
;
